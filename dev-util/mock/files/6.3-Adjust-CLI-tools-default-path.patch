commit a4dfd18ade8568826c24aafe4c7d74aca4e9086a
Author: Reto Gantenbein <reto.gantenbein@linuxmonk.ch>
Date:   Sat Apr 4 17:32:56 2020 +0200

    Adjust CLI tools default path for Gentoo

diff --git a/mock/docs/site-defaults.cfg b/mock/docs/site-defaults.cfg
index 622eae3a..59618695 100644
--- a/mock/docs/site-defaults.cfg
+++ b/mock/docs/site-defaults.cfg
@@ -118,7 +118,7 @@
 
 # rpmbuild/rpm executable path if you need to use different version that the
 #config_opts['rpmbuild_command'] = '/usr/bin/rpmbuild'
-#config_opts['rpm_command'] = '/bin/rpm'
+#config_opts['rpm_command'] = '/usr/bin/rpm'
 
 # By default a Yum/DNF update is performed before each rebuild
 # config_opts['update_before_build'] = True
diff --git a/mock/py/mockbuild/config.py b/mock/py/mockbuild/config.py
index f6c11fc9..22029e22 100644
--- a/mock/py/mockbuild/config.py
+++ b/mock/py/mockbuild/config.py
@@ -382,7 +382,7 @@ def setup_default_config_opts():
     config_opts['microdnf_common_opts'] = []
     config_opts['microdnf_avoid_opts'] = {}
 
-    config_opts['rpm_command'] = '/bin/rpm'
+    config_opts['rpm_command'] = '/usr/bin/rpm'
     config_opts['rpmbuild_command'] = '/usr/bin/rpmbuild'
     config_opts['user_agent'] = "Mock ({{ root }}; {{ target_arch }})"
     config_opts['opstimeout'] = 0
diff --git a/mock/py/mockbuild/file_util.py b/mock/py/mockbuild/file_util.py
index 83e117b7..dce27ce5 100644
--- a/mock/py/mockbuild/file_util.py
+++ b/mock/py/mockbuild/file_util.py
@@ -107,7 +107,7 @@ def is_in_dir(path, directory):
 
 
 def get_fs_type(path):
-    cmd = ['/bin/stat', '-f', '-L', '-c', '%T', path]
+    cmd = ['/usr/bin/stat', '-f', '-L', '-c', '%T', path]
     p = subprocess.Popen(cmd, shell=False, stdout=subprocess.PIPE,
                          universal_newlines=True)
     p.wait()
diff --git a/mock/py/mockbuild/plugins/hw_info.py b/mock/py/mockbuild/plugins/hw_info.py
index 1e844966..10e9d251 100644
--- a/mock/py/mockbuild/plugins/hw_info.py
+++ b/mock/py/mockbuild/plugins/hw_info.py
@@ -42,7 +42,7 @@ class HwInfo(object):
         out.write("CPU info:\n")
         out.write(output)
 
-        cmd = ["/bin/free", "--human"]
+        cmd = ["/usr/bin/free", "--human"]
         output = mockbuild.util.do(cmd, shell=False, returnOutput=True, raiseExc=False)
         out.write("\n\nMemory:\n")
         out.write(output)
diff --git a/mock/py/mockbuild/plugins/root_cache.py b/mock/py/mockbuild/plugins/root_cache.py
index 94031f1c..7a4c57da 100644
--- a/mock/py/mockbuild/plugins/root_cache.py
+++ b/mock/py/mockbuild/plugins/root_cache.py
@@ -36,7 +36,7 @@ class RootCache(object):
         self.rootCacheFile = os.path.join(self.rootSharedCachePath, "cache.tar")
         self.rootCacheLock = None
         self.compressProgram = self.root_cache_opts['compress_program']
-        if self.compressProgram == 'pigz' and not os.path.exists('/bin/pigz'):
+        if self.compressProgram == 'pigz' and not os.path.exists('/usr/bin/pigz'):
             getLog().warning("specified 'pigz' as the root cache compress program but not available; using gzip")
             self.compressProgram = 'gzip'
 
