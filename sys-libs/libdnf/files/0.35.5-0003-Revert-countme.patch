From 680a0cb2adb8217b1a0cbe6f2648925980997262 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ale=C5=A1=20Mat=C4=9Bj?= <amatej@redhat.com>
Date: Tue, 1 Oct 2019 10:52:26 +0200
Subject: [PATCH 1/3] Revert "[repo] Add basic countme support (RhBug:1647454)"

This reverts commit 5495019bec618a8f27c898a85c9e65bb5e14e376.
---
 libdnf/repo/Repo-private.hpp |  3 +-
 libdnf/repo/Repo.cpp         | 81 ++----------------------------------
 libdnf/utils/utils.cpp       | 10 -----
 libdnf/utils/utils.hpp       | 12 ------
 4 files changed, 4 insertions(+), 102 deletions(-)

diff --git a/libdnf/repo/Repo-private.hpp b/libdnf/repo/Repo-private.hpp
index 01224a14..ad9cc5ff 100644
--- a/libdnf/repo/Repo-private.hpp
+++ b/libdnf/repo/Repo-private.hpp
@@ -128,7 +128,7 @@ public:
 
     std::unique_ptr<LrHandle> lrHandleInitBase();
     std::unique_ptr<LrHandle> lrHandleInitLocal();
-    std::unique_ptr<LrHandle> lrHandleInitRemote(const char *destdir, bool mirrorSetup = true, bool countme = false);
+    std::unique_ptr<LrHandle> lrHandleInitRemote(const char *destdir, bool mirrorSetup = true);
 
     void attachLibsolvRepo(LibsolvRepo * libsolvRepo);
     void detachLibsolvRepo();
@@ -187,7 +187,6 @@ private:
     Repo * owner;
     std::unique_ptr<LrResult> lrHandlePerform(LrHandle * handle, const std::string & destDirectory,
         bool setGPGHomeDir);
-    void embedCountmeFlag(std::string & url);
     bool isMetalinkInSync();
     bool isRepomdInSync();
     void resetMetadataExpired();
diff --git a/libdnf/repo/Repo.cpp b/libdnf/repo/Repo.cpp
index 8588f164..c48245eb 100644
--- a/libdnf/repo/Repo.cpp
+++ b/libdnf/repo/Repo.cpp
@@ -24,20 +24,6 @@
 #define MIRRORLIST_FILENAME  "mirrorlist"
 #define RECOGNIZED_CHKSUMS {"sha512", "sha256"}
 
-// COUNTME MACROS
-// width of the sliding time window (in seconds)
-#define COUNTME_WINDOW (7*24*60*60)  // 1 week
-// starting point of the sliding time window relative to the UNIX epoch
-// allows for aligning the window with a specific weekday
-#define COUNTME_OFFSET (345600)  // Monday (1970-01-05 00:00:00 UTC)
-// estimated number of metalink requests sent over the window
-// used to generate the probability distribution of counting events
-#define COUNTME_BUDGET (4)  // metadata_expire defaults to 2 days
-// cookie file name
-#define COUNTME_COOKIE "countme"
-// cookie file format version
-#define COUNTME_VERSION (0)
-
 #include "../log.hpp"
 #include "Repo-private.hpp"
 #include "../dnf-utils.h"
@@ -508,7 +494,7 @@ std::unique_ptr<LrHandle> Repo::Impl::lrHandleInitLocal()
     return h;
 }
 
-std::unique_ptr<LrHandle> Repo::Impl::lrHandleInitRemote(const char *destdir, bool mirrorSetup, bool countme)
+std::unique_ptr<LrHandle> Repo::Impl::lrHandleInitRemote(const char *destdir, bool mirrorSetup)
 {
     std::unique_ptr<LrHandle> h(lrHandleInitBase());
     handleSetOpt(h.get(), LRO_HTTPHEADER, httpHeaders.get());
@@ -528,10 +514,8 @@ std::unique_ptr<LrHandle> Repo::Impl::lrHandleInitRemote(const char *destdir, bo
 
     enum class Source {NONE, METALINK, MIRRORLIST} source{Source::NONE};
     std::string tmp;
-    if (!conf->metalink().empty() && !(tmp=conf->metalink().getValue()).empty()) {
+    if (!conf->metalink().empty() && !(tmp=conf->metalink().getValue()).empty())
         source = Source::METALINK;
-        if (countme) embedCountmeFlag(tmp);
-    }
     else if (!conf->mirrorlist().empty() && !(tmp=conf->mirrorlist().getValue()).empty())
         source = Source::MIRRORLIST;
     if (source != Source::NONE) {
@@ -1021,64 +1005,6 @@ bool Repo::Impl::loadCache(bool throwExcept)
     return true;
 }
 
-void Repo::Impl::embedCountmeFlag(std::string & url) {
-    /*
-     * The countme flag will be embedded once (and only once) in every position
-     * of a sliding time window (COUNTME_WINDOW) that starts at COUNTME_OFFSET
-     * and moves along the time axis, by one length at a time, in such a way
-     * that the current point in time always stays within:
-     *
-     * UNIX epoch                    now
-     * |                             |
-     * |---*-----|-----|-----|-----[-*---]---> time
-     *     |                       ~~~~~~~
-     *     COUNTME_OFFSET          COUNTME_WINDOW
-     *
-     * This is to align the time window with an absolute point in time rather
-     * than the last counting event (which could facilitate tracking across
-     * multiple such events).
-     *
-     * Possible TODO:
-     *   - Provide proof for this function being epsilon-differentially private
-     *   - Increment countme flag (hint: Basic RAPPOR)
-     */
-
-    // Load the cookie
-    std::string fname = getPersistdir() + "/" + COUNTME_COOKIE;
-    int ver = COUNTME_VERSION;      // file format version (for future use)
-    time_t epoch = 0;               // position of first-ever counted window
-    time_t win = COUNTME_OFFSET;    // position of last counted window
-    int budget = -1;                // budget for this window (-1 = generate)
-    std::ifstream(fname) >> ver >> epoch >> win >> budget;
-
-    // Bail out if the window has not advanced since
-    time_t now = time(NULL);
-    time_t delta = now - win;
-    if (delta < COUNTME_WINDOW) return;
-
-    // Evenly distribute the probability of the counting event over the first N
-    // requests in this window (where N = COUNTME_BUDGET), by defining a random
-    // "budget" of ordinary requests that we first have to spend.  This ensures
-    // that no particular request is special and thus no privacy loss is
-    // incurred by embedding the flag within N requests.
-    if (budget < 0) budget = numeric::random(1, COUNTME_BUDGET);
-    budget--;
-    if (!budget) {
-        // Budget exhausted, counting!
-        url.find('?') != url.npos ? url += '&' : url += '?';
-        url += "countme=1";
-        // Compute the position of this window
-        win = now - (delta % COUNTME_WINDOW);
-        if (!epoch) epoch = win;
-        // Request a new budget
-        budget = -1;
-    }
-
-    // Save the cookie
-    std::ofstream(fname) << COUNTME_VERSION << " " << epoch << " " << win
-                         << " " << budget;
-}
-
 // Use metalink to check whether our metadata are still current.
 bool Repo::Impl::isMetalinkInSync()
 {
@@ -1089,8 +1015,7 @@ bool Repo::Impl::isMetalinkInSync()
         dnf_remove_recursive(tmpdir, NULL);
     });
 
-    bool countme = conf->countme().getValue();
-    std::unique_ptr<LrHandle> h(lrHandleInitRemote(tmpdir, true, countme));
+    std::unique_ptr<LrHandle> h(lrHandleInitRemote(tmpdir));
 
     handleSetOpt(h.get(), LRO_FETCHMIRRORS, 1L);
     auto r = lrHandlePerform(h.get(), tmpdir, false);
diff --git a/libdnf/utils/utils.cpp b/libdnf/utils/utils.cpp
index 2bb1290d..35858fe7 100644
--- a/libdnf/utils/utils.cpp
+++ b/libdnf/utils/utils.cpp
@@ -18,7 +18,6 @@ extern "C" {
 #include <fcntl.h>
 #include <unistd.h>
 #include <string.h>
-#include <random>
 
 namespace libdnf {
 
@@ -313,13 +312,4 @@ void decompress(const char * inPath, const char * outPath, mode_t outMode, const
 
 }
 
-namespace numeric {
-int random(const int min, const int max) {
-    std::random_device rd;
-    std::default_random_engine gen(rd());
-    std::uniform_int_distribution<int> dist(min, max);
-    return dist(gen);
-}
-}
-
 }
diff --git a/libdnf/utils/utils.hpp b/libdnf/utils/utils.hpp
index d032dd42..53471f0f 100644
--- a/libdnf/utils/utils.hpp
+++ b/libdnf/utils/utils.hpp
@@ -68,18 +68,6 @@ std::vector<std::string> getDirContent(const std::string &dirPath);
 void decompress(const char * inPath, const char * outPath, mode_t outMode, const char * compressType = nullptr);
 }
 
-namespace numeric {
-/**
-* @brief Return a random number in the given range.
-*
-* Each possible value has an equal likelihood of being produced.
-*
-* @param min  lower bound of the range
-* @param max  upper bound of the range
-*/
-int random(const int min, const int max);
-}
-
 }
 
 #endif //LIBDNF_UTILS_HPP
-- 
2.23.0


From 7b58fd57005271f377305b19088891b64459fcfa Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ale=C5=A1=20Mat=C4=9Bj?= <amatej@redhat.com>
Date: Tue, 1 Oct 2019 10:52:42 +0200
Subject: [PATCH 2/3] Revert "Add countme config option"

This reverts commit 52a5af375a91b4a58fa1e5850550b9ce43ea6cd2.
---
 libdnf/conf/ConfigMain.cpp | 3 ---
 libdnf/conf/ConfigMain.hpp | 1 -
 libdnf/conf/ConfigRepo.cpp | 3 ---
 libdnf/conf/ConfigRepo.hpp | 1 -
 4 files changed, 8 deletions(-)

diff --git a/libdnf/conf/ConfigMain.cpp b/libdnf/conf/ConfigMain.cpp
index 793aca22..170b2972 100644
--- a/libdnf/conf/ConfigMain.cpp
+++ b/libdnf/conf/ConfigMain.cpp
@@ -277,7 +277,6 @@ class ConfigMain::Impl {
         // paths are sorted by precedence (see os-release(5) for details)
         getOsReleaseData({"/etc/os-release", "/usr/lib/os-release"})
     )};
-    OptionBool countme{false};
 
     // Repo main config
 
@@ -428,7 +427,6 @@ ConfigMain::Impl::Impl(Config & owner)
     owner.optBinds().add("ignorearch", ignorearch);
     owner.optBinds().add("module_platform_id", module_platform_id);
     owner.optBinds().add("user_agent", user_agent);
-    owner.optBinds().add("countme", countme);
 
     // Repo main config
 
@@ -559,7 +557,6 @@ OptionBool & ConfigMain::ignorearch() { return pImpl->ignorearch; }
 
 OptionString & ConfigMain::module_platform_id() { return pImpl->module_platform_id; }
 OptionString & ConfigMain::user_agent() { return pImpl->user_agent; }
-OptionBool & ConfigMain::countme() { return pImpl->countme; }
 
 // Repo main config
 OptionNumber<std::uint32_t> & ConfigMain::retries() { return pImpl->retries; }
diff --git a/libdnf/conf/ConfigMain.hpp b/libdnf/conf/ConfigMain.hpp
index 1d28afc6..d67bc38b 100644
--- a/libdnf/conf/ConfigMain.hpp
+++ b/libdnf/conf/ConfigMain.hpp
@@ -123,7 +123,6 @@ public:
 
     OptionString & module_platform_id();
     OptionString & user_agent();
-    OptionBool & countme();
 
     // Repo main config
     OptionNumber<std::uint32_t> & retries();
diff --git a/libdnf/conf/ConfigRepo.cpp b/libdnf/conf/ConfigRepo.cpp
index bf8c4190..b1c5b96a 100644
--- a/libdnf/conf/ConfigRepo.cpp
+++ b/libdnf/conf/ConfigRepo.cpp
@@ -74,7 +74,6 @@ class ConfigRepo::Impl {
     OptionChild<OptionBool> skip_if_unavailable{masterConfig.skip_if_unavailable()};
     OptionString enabled_metadata{""};
     OptionChild<OptionString> user_agent{masterConfig.user_agent()};
-    OptionChild<OptionBool> countme{masterConfig.countme()};
     OptionEnum<std::string> failovermethod{"priority", {"priority", "roundrobin"}};
 };
 
@@ -151,7 +150,6 @@ ConfigRepo::Impl::Impl(Config & owner, ConfigMain & masterConfig)
     owner.optBinds().add("skip_if_unavailable", skip_if_unavailable);
     owner.optBinds().add("enabled_metadata", enabled_metadata);
     owner.optBinds().add("user_agent", user_agent);
-    owner.optBinds().add("countme", countme);
 }
 
 ConfigRepo::ConfigRepo(ConfigMain & masterConfig) : pImpl(new Impl(*this, masterConfig)) {}
@@ -202,7 +200,6 @@ OptionChild<OptionNumber<std::uint32_t> > & ConfigRepo::deltarpm_percentage() {
 OptionChild<OptionBool> & ConfigRepo::skip_if_unavailable() { return pImpl->skip_if_unavailable; }
 OptionString & ConfigRepo::enabled_metadata() { return pImpl->enabled_metadata; }
 OptionChild<OptionString> & ConfigRepo::user_agent() { return pImpl->user_agent; }
-OptionChild<OptionBool> & ConfigRepo::countme() { return pImpl->countme; }
 OptionEnum<std::string> & ConfigRepo::failovermethod() { return pImpl->failovermethod; }
 
 }
diff --git a/libdnf/conf/ConfigRepo.hpp b/libdnf/conf/ConfigRepo.hpp
index a59e0209..9096a4f6 100644
--- a/libdnf/conf/ConfigRepo.hpp
+++ b/libdnf/conf/ConfigRepo.hpp
@@ -89,7 +89,6 @@ public:
     // option recognized by other tools, e.g. gnome-software, but unused in dnf
     OptionString & enabled_metadata();
     OptionChild<OptionString> & user_agent();
-    OptionChild<OptionBool> & countme();
     // yum compatibility options
     OptionEnum<std::string> & failovermethod();
 
-- 
2.23.0


From 53d8244d365de457f13f755bc71ee5493b88c1ca Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ale=C5=A1=20Mat=C4=9Bj?= <amatej@redhat.com>
Date: Tue, 1 Oct 2019 10:52:45 +0200
Subject: [PATCH 3/3] Revert "Add user_agent config option (RhBug:1156007)"

This reverts commit 3e911125ef0fd2ef8806be8ba070a08db7194793.
---
 libdnf/conf/ConfigMain.cpp | 8 --------
 libdnf/conf/ConfigMain.hpp | 1 -
 libdnf/conf/ConfigRepo.cpp | 3 ---
 libdnf/conf/ConfigRepo.hpp | 1 -
 libdnf/repo/Repo.cpp       | 8 +++-----
 5 files changed, 3 insertions(+), 18 deletions(-)

diff --git a/libdnf/conf/ConfigMain.cpp b/libdnf/conf/ConfigMain.cpp
index 170b2972..e6f8ae2a 100644
--- a/libdnf/conf/ConfigMain.cpp
+++ b/libdnf/conf/ConfigMain.cpp
@@ -21,7 +21,6 @@
 #include "ConfigMain.hpp"
 #include "Const.hpp"
 #include "Config-private.hpp"
-#include "libdnf/utils/os-release.hpp"
 
 #include <algorithm>
 #include <array>
@@ -273,11 +272,6 @@ class ConfigMain::Impl {
     OptionBool ignorearch{false};
     OptionString module_platform_id{nullptr};
 
-    OptionString user_agent{getUserAgent(
-        // paths are sorted by precedence (see os-release(5) for details)
-        getOsReleaseData({"/etc/os-release", "/usr/lib/os-release"})
-    )};
-
     // Repo main config
 
     OptionNumber<std::uint32_t> retries{10};
@@ -426,7 +420,6 @@ ConfigMain::Impl::Impl(Config & owner)
     owner.optBinds().add("comment", comment);
     owner.optBinds().add("ignorearch", ignorearch);
     owner.optBinds().add("module_platform_id", module_platform_id);
-    owner.optBinds().add("user_agent", user_agent);
 
     // Repo main config
 
@@ -556,7 +549,6 @@ OptionBool & ConfigMain::downloadonly() { return pImpl->downloadonly; }
 OptionBool & ConfigMain::ignorearch() { return pImpl->ignorearch; }
 
 OptionString & ConfigMain::module_platform_id() { return pImpl->module_platform_id; }
-OptionString & ConfigMain::user_agent() { return pImpl->user_agent; }
 
 // Repo main config
 OptionNumber<std::uint32_t> & ConfigMain::retries() { return pImpl->retries; }
diff --git a/libdnf/conf/ConfigMain.hpp b/libdnf/conf/ConfigMain.hpp
index d67bc38b..113b2111 100644
--- a/libdnf/conf/ConfigMain.hpp
+++ b/libdnf/conf/ConfigMain.hpp
@@ -122,7 +122,6 @@ public:
     OptionBool & ignorearch();
 
     OptionString & module_platform_id();
-    OptionString & user_agent();
 
     // Repo main config
     OptionNumber<std::uint32_t> & retries();
diff --git a/libdnf/conf/ConfigRepo.cpp b/libdnf/conf/ConfigRepo.cpp
index b1c5b96a..e86cdff3 100644
--- a/libdnf/conf/ConfigRepo.cpp
+++ b/libdnf/conf/ConfigRepo.cpp
@@ -73,7 +73,6 @@ class ConfigRepo::Impl {
     OptionChild<OptionNumber<std::uint32_t> > deltarpm_percentage{masterConfig.deltarpm_percentage()};
     OptionChild<OptionBool> skip_if_unavailable{masterConfig.skip_if_unavailable()};
     OptionString enabled_metadata{""};
-    OptionChild<OptionString> user_agent{masterConfig.user_agent()};
     OptionEnum<std::string> failovermethod{"priority", {"priority", "roundrobin"}};
 };
 
@@ -149,7 +148,6 @@ ConfigRepo::Impl::Impl(Config & owner, ConfigMain & masterConfig)
     owner.optBinds().add("deltarpm_percentage", deltarpm_percentage);
     owner.optBinds().add("skip_if_unavailable", skip_if_unavailable);
     owner.optBinds().add("enabled_metadata", enabled_metadata);
-    owner.optBinds().add("user_agent", user_agent);
 }
 
 ConfigRepo::ConfigRepo(ConfigMain & masterConfig) : pImpl(new Impl(*this, masterConfig)) {}
@@ -199,7 +197,6 @@ OptionChild<OptionBool> & ConfigRepo::deltarpm() { return pImpl->deltarpm; }
 OptionChild<OptionNumber<std::uint32_t> > & ConfigRepo::deltarpm_percentage() { return pImpl->deltarpm_percentage; }
 OptionChild<OptionBool> & ConfigRepo::skip_if_unavailable() { return pImpl->skip_if_unavailable; }
 OptionString & ConfigRepo::enabled_metadata() { return pImpl->enabled_metadata; }
-OptionChild<OptionString> & ConfigRepo::user_agent() { return pImpl->user_agent; }
 OptionEnum<std::string> & ConfigRepo::failovermethod() { return pImpl->failovermethod; }
 
 }
diff --git a/libdnf/conf/ConfigRepo.hpp b/libdnf/conf/ConfigRepo.hpp
index 9096a4f6..a47030bf 100644
--- a/libdnf/conf/ConfigRepo.hpp
+++ b/libdnf/conf/ConfigRepo.hpp
@@ -88,7 +88,6 @@ public:
     OptionChild<OptionBool> & skip_if_unavailable();
     // option recognized by other tools, e.g. gnome-software, but unused in dnf
     OptionString & enabled_metadata();
-    OptionChild<OptionString> & user_agent();
     // yum compatibility options
     OptionEnum<std::string> & failovermethod();
 
diff --git a/libdnf/repo/Repo.cpp b/libdnf/repo/Repo.cpp
index c48245eb..13266b84 100644
--- a/libdnf/repo/Repo.cpp
+++ b/libdnf/repo/Repo.cpp
@@ -23,6 +23,7 @@
 #define METALINK_FILENAME "metalink.xml"
 #define MIRRORLIST_FILENAME  "mirrorlist"
 #define RECOGNIZED_CHKSUMS {"sha512", "sha256"}
+#define USER_AGENT "libdnf"
 
 #include "../log.hpp"
 #include "Repo-private.hpp"
@@ -35,7 +36,6 @@
 #include "libdnf/conf/ConfigParser.hpp"
 #include "libdnf/utils/File.hpp"
 #include "libdnf/utils/utils.hpp"
-#include "libdnf/utils/os-release.hpp"
 
 #include "bgettext/bgettext-lib.h"
 #include "tinyformat/tinyformat.hpp"
@@ -458,7 +458,7 @@ std::unique_ptr<LrHandle> Repo::Impl::lrHandleInitBase()
     dlist.push_back(NULL);
     handleSetOpt(h.get(), LRO_PRESERVETIME, static_cast<long>(preserveRemoteTime));
     handleSetOpt(h.get(), LRO_REPOTYPE, LR_YUMREPO);
-    handleSetOpt(h.get(), LRO_USERAGENT, conf->user_agent().getValue().c_str());
+    handleSetOpt(h.get(), LRO_USERAGENT, USER_AGENT);
     handleSetOpt(h.get(), LRO_YUMDLIST, dlist.data());
     handleSetOpt(h.get(), LRO_INTERRUPTIBLE, 1L);
     handleSetOpt(h.get(), LRO_GPGCHECK, conf->repo_gpgcheck().getValue());
@@ -1543,10 +1543,9 @@ int PackageTarget::Impl::mirrorFailureCB(void * data, const char * msg, const ch
 static LrHandle * newHandle(ConfigMain * conf)
 {
     LrHandle *h = lr_handle_init();
-    const char * user_agent = USER_AGENT;
+    handleSetOpt(h, LRO_USERAGENT, USER_AGENT);
     // see dnf.repo.Repo._handle_new_remote() how to pass
     if (conf) {
-        user_agent = conf->user_agent().getValue().c_str();
         auto minrate = conf->minrate().getValue();
         handleSetOpt(h, LRO_LOWSPEEDLIMIT, static_cast<long>(minrate));
 
@@ -1584,7 +1583,6 @@ static LrHandle * newHandle(ConfigMain * conf)
         handleSetOpt(h, LRO_SSLVERIFYHOST, sslverify);
         handleSetOpt(h, LRO_SSLVERIFYPEER, sslverify);
     }
-    handleSetOpt(h, LRO_USERAGENT, user_agent);
     return h;
 }
 
-- 
2.23.0

